version: "3.4"

volumes:
  node_data: {}

services:
  ################################ REACTJS ################################
  client:
    container_name: client
    build:
      dockerfile: Dockerfile
      context: ./client
    expose:
      - 3000
    volumes:
      - /app/node_modules
      - ./client:/app
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:5000/api/v1
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - server
    ports:
      - 3000:3000
  ################################ NODEJS ################################
  server:
    container_name: server
    build:
      dockerfile: Dockerfile
      context: ./server
    expose:
      - 5000
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - NODE_ENV=production
      - PORT=5000
      - ELASTIC_APM_SERVICE_NAME="Backend Inventory System"
      - ELASTIC_APM_backend_URL=http://localhost:8200
      - SECRET_JWT=secret
      - EXPIRES_IN=300
      - DB_TYPE=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USERNAME=root
      - DB_PASSWORD=admin
      - DB_DATABASE=inventory
      - DB_SYNCHRONIZE=true
      - DB_LOGGING=true
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - db
    ports:
      - 5000:5000
  ################################ ELASTICSEARCH ################################
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    volumes:
      - node_data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - 9200:9200
  ################################ KIBANA ################################
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.13.0
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
      - xpack.apm.enabled=false
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
  ################################ APM backend ################################
  apm-server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:7.13.0
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    depends_on:
      - elasticsearch
      - kibana
    ports:
      - 8200:8200
  ################################ MYSQL ################################
  db:
    container_name: db
    image: mysql:latest
    environment:
      - MYSQL_DATABASE=inventory
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
      - MYSQL_ROOT_PASSWORD=admin
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
