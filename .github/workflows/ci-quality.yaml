name: Quality Code

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  quality:
    name: Quality Code
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
          - "16.x"
        database-name:
          - inventory
        database-user:
          - user
        database-password:
          - user
        database-password-admin:
          - admin
        database-host:
          - db
        database-port:
          - 3306
        database-dialect:
          - mysql
        base-url:
          - http://localhost:5000/api/v1

  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: "./"
        env:
          DB_TYPE: ${{ matrix.database-dialect }}
          DB_HOST: ${{ matrix.database-host }}
          DB_USERNAME: ${{ matrix.database-user }}
          DB_PASSWORD: ${{ matrix.database-password-admin }}
          DB_DATABASE: ${{ matrix.database-name }}
          DB_PORT: ${{ matrix.database-port }}
          SECRET_JWT: ${{ secrets.SECRET_JWT }}
          EXPIRES_IN: 300
        with:
          package_directory: "backend"
          node_version: ${{ matrix.node-version }}
          build_command: "npm run build"

      - name: Set up React
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        
      - name: Run tests
        run: npm test

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: "./"
        env:
          REACT_APP_API_URL: ${{ matrix.base-url }}
        with:
          package_directory: "frontend"
          node_version: ${{ matrix.node-version }}
          build_command: "npm run build"

      - name: Set up React
        uses: actions/setup-node@v1
        with:
          node_version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        
      - name: Run tests
        run: npm test